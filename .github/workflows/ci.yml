name: Epic-sql CI

on:
  push:
    paths-ignore:
      - "*.md"
      - .gitignore
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    name: "Test os=${{ matrix.os }} py=${{ matrix.python-version }}"
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        include:
          - os: ubuntu-latest
            python-version: "3.10"
            archive-artifacts: true
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
      - name: Build library
        run: poetry build --format sdist
      - name: Install library
        run: python -m pip install dist/*.tar.gz
      - name: Install test requirements
        run: poetry install --only test --no-root --no-interaction
      - name: Run tests
        # Do NOT use `python -m pytest` here! That would import the live code base instead of the installed one.
        run: pytest -v -r a --import-mode=append --cov=epic.sql --cov-report html:cov_html --cov-report term
      - name: Archive library
        if: ${{ matrix.archive-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: library
          path: dist/*.tar.gz
      - name: Archive code coverage results
        if: ${{ matrix.archive-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cov_html
